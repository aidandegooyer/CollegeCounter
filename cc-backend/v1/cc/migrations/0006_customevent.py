# Generated by Django 5.2.1 on 2025-10-13 17:50

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cc', '0005_remove_unique_constraints'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bracket_link', models.URLField(blank=True, help_text='Link to tournament bracket (e.g., Challonge, Battlefy)', null=True)),
                ('stream_link', models.URLField(blank=True, help_text='Primary stream link (e.g., Twitch, YouTube)', null=True)),
                ('secondary_stream_link', models.URLField(blank=True, help_text='Secondary/backup stream link', null=True)),
                ('discord_link', models.URLField(blank=True, help_text='Discord server link for the event', null=True)),
                ('registration_link', models.URLField(blank=True, help_text='Registration/signup link', null=True)),
                ('rules_document', models.URLField(blank=True, help_text='Link to rules document or webpage', null=True)),
                ('prize_pool', models.DecimalField(blank=True, decimal_places=2, help_text='Total prize pool amount', max_digits=10, null=True)),
                ('prize_currency', models.CharField(default='USD', help_text='Currency for prize pool (e.g., USD, EUR)', max_length=3)),
                ('max_teams', models.IntegerField(blank=True, help_text='Maximum number of teams allowed', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('entry_fee', models.DecimalField(blank=True, decimal_places=2, help_text='Entry fee per team', max_digits=8, null=True)),
                ('format', models.CharField(blank=True, help_text='Tournament format (e.g., Single Elimination, Double Elimination, Swiss)', max_length=50, null=True)),
                ('game_mode', models.CharField(blank=True, help_text='Game mode or ruleset (e.g., 5v5, Best of 3)', max_length=50, null=True)),
                ('is_featured', models.BooleanField(default=False, help_text='Mark this event as featured on the website')),
                ('is_public', models.BooleanField(default=True, help_text='Whether this event is visible to public')),
                ('registration_open', models.BooleanField(default=False, help_text='Whether registration is currently open')),
                ('registration_deadline', models.DateTimeField(blank=True, help_text='Deadline for team registration', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('twitter_hashtag', models.CharField(blank=True, help_text='Official hashtag for the event (without #)', max_length=100, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional custom data as JSON')),
                ('event', models.OneToOneField(help_text='Base event this custom event extends', on_delete=django.db.models.deletion.CASCADE, related_name='custom_details', to='cc.event')),
            ],
            options={
                'verbose_name': 'Custom Event',
                'verbose_name_plural': 'Custom Events',
            },
        ),
    ]
