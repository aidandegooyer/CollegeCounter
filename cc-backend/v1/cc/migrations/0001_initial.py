# Generated by Django 5.2.1 on 2025-05-29 18:49

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
                ('picture', models.URLField(blank=True, help_text='Event picture URL', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('url', models.URLField(blank=True, help_text='Link to match details', null=True)),
                ('score_team1', models.IntegerField(default=0)),
                ('score_team2', models.IntegerField(default=0)),
                ('platform', models.CharField(default='other', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('picture', models.URLField(blank=True, null=True)),
                ('skill_level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('steam_id', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True)),
                ('faceit_id', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True)),
                ('elo', models.IntegerField(default=1000, validators=[django.core.validators.MinValueValidator(0)])),
                ('benched', models.BooleanField(default=False)),
                ('visible', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='EventMatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('round', models.IntegerField(default=1, help_text='Round number in the event', validators=[django.core.validators.MinValueValidator(1)])),
                ('num_in_bracket', models.IntegerField(default=1, help_text='Match number in the bracket', validators=[django.core.validators.MinValueValidator(1)])),
                ('is_bye', models.BooleanField(default=False, help_text='Indicates if this match is a bye round')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_matches', to='cc.event')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_matches', to='cc.match')),
            ],
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to='cc.season')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='season',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='cc.season'),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('picture', models.URLField(blank=True, null=True)),
                ('school_name', models.CharField(blank=True, max_length=100, null=True)),
                ('elo', models.IntegerField(default=1000, validators=[django.core.validators.MinValueValidator(0)])),
                ('captain', models.ForeignKey(blank=True, help_text="Must be one of this team's roster", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='captain_of', to='cc.player')),
            ],
        ),
        migrations.CreateModel(
            name='RankingItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rank', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('elo', models.IntegerField(default=1000, validators=[django.core.validators.MinValueValidator(0)])),
                ('ranking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranking_items', to='cc.ranking')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranking_items', to='cc.team')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roster', to='cc.team'),
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('faceit_id', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True)),
                ('playfly_id', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True)),
                ('playfly_participant_id', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True)),
                ('competition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='cc.competition')),
                ('season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='cc.season')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='cc.team')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='team1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_team1', to='cc.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_team2', to='cc.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='winner',
            field=models.ForeignKey(blank=True, help_text='Team that won the match, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_won', to='cc.team'),
        ),
        migrations.AddField(
            model_name='event',
            name='winner',
            field=models.ForeignKey(blank=True, help_text='Team that won the event, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events_won', to='cc.team'),
        ),
    ]
